// [ghub](https://github.com/ChrTang/ghub) 2.0.0
// (c) 2015 Christian Tang
// Freely distributable under the MIT license.
!function(t){function a(t,i){s.__jsonp_callback=function(t){i(t)};var a=document.getElementsByTagName("head")[0],e=document.createElement("script");e.setAttribute("src",t+"?callback=ghub.__jsonp_callback"),a.appendChild(e),a.removeChild(e)}function e(t){var i={name:t.name,fullName:t.full_name,language:t.language,description:t.description,url:t.url,html_url:t.html_url,default_branch:t.default_branch,stars:t.stargazers_count,forks:t.forks_count,homepage:t.homepage,has_pages:t.has_pages};return i}function n(t){var i={name:t.filename,language:t.language,url:t.raw_url,size:t.size,type:t.type};return i}var r="",o=t.ghub,s={};s.VERSION="2.0.0",s.init=function(t){return this.loginName=t,this},s.userRepos=function(t){return a("https://api.github.com/users/"+this.loginName+"/repos",function(a){var n=[];for(i in a.data){var r=e(a.data[i]);n.push(r)}t(n)}),this},s.starredRepos=function(t){return a("https://api.github.com/users/"+this.loginName+"/starred",function(a){var n=[];for(i in a.data){var r=e(a.data[i]);n.push(r)}t(n)}),this},s.userRepo=function(t){return this instanceof s.userRepo?(this.repoName=t,void(this.loginName=r)):new s.userRepo(t)},s.userRepo.prototype.commits=function(t){return a("https://api.github.com/repos/"+this.loginName+"/"+this.repoName+"/commits",function(a){var e=[];for(i in a.data)e.push({author:{name:a.data[i].author.name,email:a.data[i].author.email,date:a.data[i].author.date},committer:{name:a.data[i].committer.name,email:a.data[i].committer.email,date:a.data[i].committer.date},message:a.data[i].message});t(e)}),this},s.userRepo.prototype.releases=function(t){return a("https://api.github.com/repos/"+this.loginName+"/"+this.repoName+"/releases",function(a){var e=[];for(i in a.data)e.push({tagName:a.data[i].tag_name,name:a.data[i].name,branch:a.data[i].target_commitish,draft:a.data[i].draft,author:{login:a.data[i].author.login,url:a.data[i].author.url},url:a.data[i].html_url});t(e)}),this},s.userOrgs=function(t){return a("https://api.github.com/users/"+this.loginName+"/orgs",function(a){var e=[];for(i in a.data)e.push({id:a.data[i].id,login:a.data[i].login});t(e)}),this},s.org=function(t){return this instanceof s.org?void(this.orgLogin=t):new s.org(t)},s.org.prototype.get=function(t){return a("https://api.github.com/orgs/"+this.orgLogin,function(i){var a={id:i.data.id,login:i.data.login,name:i.data.name,description:i.data.description,blog:i.data.blog,html_url:i.data.html_url,publicRepos:i.data.public_repos};t(a)}),this},s.org.prototype.members=function(t){return a("https://api.github.com/orgs/"+this.orgLogin+"/public_members",function(a){var e=[];for(i in a.data)e.push({login:a.data[i].login});t(e)}),this},s.org.prototype.repos=function(t){return a("https://api.github.com/orgs/"+this.orgLogin+"/repos",function(a){var n=[];for(i in a.data){var r=e(a.data[i]);n.push(r)}t(n)}),this},s.user=function(t){return this instanceof s.user?void(this.userLogin=t):new s.user(t)},s.user.prototype.get=function(t){return a("https://api.github.com/users/"+this.userLogin,function(i){var a={};a.login=i.data.login,a.id=i.data.id,a.name=i.data.name,a.blog=i.data.blog,a.company=i.data.company,a.publicRepos=i.data.public_repos,a.publicGists=i.data.public_gists,t(a)}),this},s.userGists=function(t){return a("https://api.github.com/users/"+this.loginName+"/gists",function(a){var e=[];for(i in a.data)e.push({id:a.data[i].id,description:a.data[i].description,url:a.data[i].html_url});t(e)}),this},s.gist=function(t){return this instanceof s.gist?void(this.gistId=t):new s.gist(t)},s.gist.prototype.files=function(t){return a("https://api.github.com/gists/"+this.gistId,function(a){var e=[];for(i in a.data.files)e.push(n(a.data.files[i]));t(e)}),this},s.gist.prototype.get=function(t){return a("https://api.github.com/gists/"+this.gistId,function(a){var e=[];for(i in a.data.files)e.push(n(a.data.files[i]));var r={description:a.data.description,url:a.data.html_url,files:e};t(r)}),this},s.noConflict=function(){return t.ghub=o,this},"function"==typeof define&&define.amd?define("ghub",function(){return s}):t.ghub=s}(this);