// [jhub](https://github.com/TangChr/jhub) 2.2.0
// (c) 2015 Christian Tang
// Freely distributable under the MIT license.
!function(t){function a(t){var i={id:t.id,name:t.name,fullName:t.full_name,language:t.language,url:t.url,htmlUrl:t.html_url,gitUrl:t.git_url,sshUrl:t.ssh_url,cloneUrl:t.clone_url,createdAt:t.created_at,updatedAt:t.updated_at,pushedAt:t.pushed_at,description:t.description,fork:t.fork,defaultBranch:t.default_branch,stars:t.stargazers_count,forks:t.forks_count,homepage:t.homepage,hasHages:t.has_pages,owner:{id:t.owner.id,login:t.owner.login,htmlUrl:t.owner.html_url}};return i}function r(t){var i={name:t.filename,language:t.language,url:t.raw_url,size:t.size,type:t.type};return i}function e(t,i){s.__jsonp_callback=function(t){i(t)};var a=document.getElementsByTagName("head")[0],r=document.createElement("script");r.setAttribute("src",t+"?callback=jhub.__jsonp_callback"),a.appendChild(r),a.removeChild(r)}var o="",n=t.jhub,s={};s.VERSION="2.2.0",s.init=function(t){return this.loginName=t,this},s.userRepos=function(t){return e("https://api.github.com/users/"+this.loginName+"/repos",function(r){var e=[];for(i in r.data){var o=a(r.data[i]);e.push(o)}t(e)}),this},s.starredRepos=function(t){return e("https://api.github.com/users/"+this.loginName+"/starred",function(r){var e=[];for(i in r.data){var o=a(r.data[i]);e.push(o)}t(e)}),this},s.userRepo=function(t){return this instanceof s.userRepo?(this.loginName=o,void(this.repoName=t)):new s.userRepo(t)},s.userRepo=function(t,i){return this instanceof s.userRepo?(this.loginName=t,void(this.repoName=i)):new s.userRepo(t,i)},s.userRepo.prototype.commits=function(t){return e("https://api.github.com/repos/"+this.loginName+"/"+this.repoName+"/commits",function(a){var r=[];for(i in a.data)r.push({author:{name:a.data[i].author.name,email:a.data[i].author.email,date:a.data[i].author.date},committer:{name:a.data[i].committer.name,email:a.data[i].committer.email,date:a.data[i].committer.date},message:a.data[i].message});t(r)}),this},s.userRepo.prototype.releases=function(t){return e("https://api.github.com/repos/"+this.loginName+"/"+this.repoName+"/releases",function(a){var r=[];for(i in a.data)r.push({id:a.data[i].id,tagName:a.data[i].tag_name,name:a.data[i].name,author:{login:a.data[i].author.login,url:a.data[i].author.url},branch:a.data[i].target_commitish,draft:a.data[i].draft,htmlUrl:a.data[i].html_url,zipballUrl:a.data[i].zipball_url,tarballUrl:a.data[i].tarball_url});t(r)}),this},s.userRepo.prototype.tags=function(t){return e("https://api.github.com/repos/"+this.loginName+"/"+this.repoName+"/tags",function(a){var r=[];for(i in a.data)r.push({name:a.data[i].name,zipballUrl:a.data[i].zipball_url,tarballUrl:a.data[i].tarball_url,commit:{sha:a.data[i].commit.sha,url:a.data[i].commit.url}});t(r)}),this},s.userRepo.prototype.stargazers=function(t){return e("https://api.github.com/repos/"+this.loginName+"/"+this.repoName+"/stargazers",function(a){var r=[];for(i in a.data)r.push({id:a.data[i].id,login:a.data[i].login,htmlUrl:a.data[i].html_url,type:a.data[i].type});t(r)}),this},s.userOrgs=function(t){return e("https://api.github.com/users/"+this.loginName+"/orgs",function(a){var r=[];for(i in a.data)r.push({id:a.data[i].id,login:a.data[i].login});t(r)}),this},s.org=function(t){return this instanceof s.org?void(this.orgLogin=t):new s.org(t)},s.org.prototype.get=function(t){return e("https://api.github.com/orgs/"+this.orgLogin,function(i){var a={id:i.data.id,login:i.data.login,name:i.data.name,description:i.data.description,blog:i.data.blog,htmlUrl:i.data.html_url,publicRepos:i.data.public_repos};t(a)}),this},s.org.prototype.members=function(t){return e("https://api.github.com/orgs/"+this.orgLogin+"/public_members",function(a){var r=[];for(i in a.data)r.push({login:a.data[i].login});t(r)}),this},s.org.prototype.repos=function(t){return e("https://api.github.com/orgs/"+this.orgLogin+"/repos",function(r){var e=[];for(i in r.data){var o=a(r.data[i]);e.push(o)}t(e)}),this},s.user=function(t){return this instanceof s.user?void(this.userLogin=t):new s.user(t)},s.user.prototype.get=function(t){return e("https://api.github.com/users/"+this.userLogin,function(i){var a={id:i.data.id,login:i.data.login,name:i.data.name,blog:i.data.blog,company:i.data.company,publicRepos:i.data.public_repos,publicGists:i.data.public_gists,type:i.data.type};t(a)}),this},s.userGists=function(t){return e("https://api.github.com/users/"+this.loginName+"/gists",function(a){var r=[];for(i in a.data)r.push({id:a.data[i].id,description:a.data[i].description,url:a.data[i].html_url});t(r)}),this},s.gist=function(t){return this instanceof s.gist?void(this.gistId=t):new s.gist(t)},s.gist.prototype.files=function(t){return e("https://api.github.com/gists/"+this.gistId,function(a){var e=[];for(i in a.data.files)e.push(r(a.data.files[i]));t(e)}),this},s.gist.prototype.get=function(t){return e("https://api.github.com/gists/"+this.gistId,function(a){var e=[];for(i in a.data.files)e.push(r(a.data.files[i]));var o={id:a.data.id,description:a.data.description,url:a.data.html_url,pullUrl:a.data.git_pull_url,pushUrl:a.data.git_push_url,files:e};t(o)}),this},s.noConflict=function(){return t.jhub=n,this},"function"==typeof define&&define.amd?define("jhub",function(){return s}):t.jhub=s}(this);